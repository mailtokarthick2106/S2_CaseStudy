version: 0.2 
phases: 
 install:
    runtime-versions:
       java: openjdk8 
 commands: 
 - echo not installing anything... 
 pre_build: 
 commands: 
 - echo Loggin in to Amazon ECR... 
 - IMAGE_REPO_NAME=awss2repoimage 
 - REPO_URI=343609142249.dkr.ecr.us-east-2.amazonaws.com/$IMAGE_REPO_NAME 
 - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION) 
 - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7) 
 - IMAGE_TAG=${COMMIT_HASH:=latest} 
 build: 
 commands: 
 - echo Build started on `date` 
 - mvn clean package 
 - echo Build docker image 
 # Use repo_uri as the image name and tag it as latest 
 - ddocker-compose build 
 - echo tag docker image 
 # Tag source should match the argument passed to -t in docker build 
 post_build: 
 commands: 
 - echo Build completed on `date` 
 - echo Pushing the Docker image... 
 - echo "Build with $IMAGE_REPO_NAME, $REPO_URI, $IMAGE_TAG" 
 - docker-compose push 
 - printf '[{"name":"%s","imageUri":"%s"}]' $IMAGE_REPO_NAME $REPO_URI:$IMAGE_TAG > imagedefinitions.json 
 - cat imagedefinitions.json 
artifacts: 
 files: imagedefinitions.json 